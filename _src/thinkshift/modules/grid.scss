// Grid.scss
// =============================================================================
// Tools to build your grid system.
// =============================================================================

// -----------------------------------------------------------------------------
// Grid Config
// -----------------------------------------------------------------------------
$grid-container-width: 960px!default; // the width of the grid container.
$grid-columns:            12!default; // number of columns in the grid.
//$grid-padding:             0!default; // padding within a column.
//$grid-border-width:        0!default; // width of the border, for maths.
//$grid-border:           none!default; // border-style for grid columns.
$grid-spacing:          20px!default; // spacing in between grid columns.
//$form-field-padding:       0!default; // no form-grid compatability unless specified in forms.scss

// -----------------------------------------------------------------------------
// Grid Mixins
// -----------------------------------------------------------------------------

// Build Grid:
// -----------
// Creates all of the classes to build your grid system.
// $grid-container-width: number in pixels for the container.
// $grid-columns: number of columns to make divisions from.
// $namespace: optional namespace to greate new grid systems.
@mixin grid-init($grid-container-width, $grid-columns, $namespace:"") {

	// Column Width.
	// Subtract the width of the margin multiplied by the number of grid columns
	// less two (first and last have no margins), then divide the remaining value
	// and round it down.
  $column-width: floor(($grid-container-width - ($grid-spacing * ($grid-columns - 1)) )/$grid-columns);

	.#{$namespace}grid {

		// add the grid container to the clearfix styles.
		@extend .clearfix;
		
		// opinionated default, so we can position things absolute in the grid.
		position: relative;

		// build the classes.
		.#{$namespace}col {
      
      // monitor styles by default.. override where necessary...
      display: block;
      float: left;
        
      @if $column-width > 0 {
        width: $column-width;
      }
        
      $margin: (floor($grid-spacing/2)); // left and right margin.
			@if $margin != 0 {
				margin: 0 $margin 20px;
			}
      
      &:last-child {
				margin-right: 0!important;
			}
      
      &:first-child {
      	margin-left: 0!important;
      }
        
      @for $n from 2 to $grid-columns + 1 {
        
        $span-width: floor(($column-width * $n) + ($grid-spacing * ($n - 1)));
        
        &.#{$namespace}colspan#{$n} {
          // width is the column width + spacing.
          // |column|mm|column|
          width: $span-width;

        } 
      }
      
      @include breakpoint(tablet) {
        
        @if $column-width > 0 {
          width: percentage(round($column-width/$grid-container-width));
        }
        
        $margin: percentage(floor($grid-spacing/2)/$grid-container-width);
  			@if $margin != 0 {
  				margin: 0 $margin;
  			}
        
        @for $n from 2 to $grid-columns + 1 {
        
          $span-width: percentage(floor(($column-width * $n) + ($grid-spacing * ($n - 1)))/$grid-container-width);
        
          &.#{$namespace}colspan#{$n} {
            // width is the column width + spacing.
            // |column|mm|column|
            width: $span-width;
            
            // recursive grids, percentage recalculations only...
            @for $rn from 2 to $grid-columns + 1 {
              
              .#{$namespace}colspan#{$rn} {
                width: 100%;
                margin: 0 0 20px 0;
              }
              
            }
          } 
        }
      } // breakpoint tablet
      
      @include breakpoint(handheld) {
        width: 100%;
        margin: 0 0 20px 0;
        @for $n from 2 to $grid-columns + 1 {
          &.#{$namespace}colspan#{$n} {
            width: 100%;
          } 
        }
      }
      
      // Some extra classes for IE6/7/8
      @if $supports-ie8 == true or $supports-ie7 == true or $supports-ie6 == true {  
        &.#{$namespace}first {
  				margin-left: 0!important;
  			}
      
        &.#{$namespace}last {
  				margin-right: 0!important;
  			}
      }
      
		} // col
	} // grid
} // mixin

// -----------------------------------------------------------------------------
// Grid Styles
// -----------------------------------------------------------------------------
@include grid-init($grid-container-width, $grid-columns); // grid12
